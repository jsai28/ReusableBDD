[
    {
        "feature_file": "theme_gem.feature",
        "scenario": "Generating a new Jekyll Theme",
        "step_num": 1,
        "step_name": "I run jekyll new-theme my-cool-theme",
        "glue_code": "When(%r!^I run jekyll(.*)$!) do |args|\n  run_jekyll(args)\n  if args.include?(\"--verbose\") || ENV[\"DEBUG\"]\n    warn \"\\n#{jekyll_run_output}\\n\"\n  end\nend\n\n",
        "glue_code_file": "step_definitions.rb",
        "language": "ruby"
    },
    {
        "feature_file": "theme_gem.feature",
        "scenario": "Generating a new Jekyll Theme",
        "step_num": 2,
        "step_name": "I should get a zero exit status",
        "glue_code": "Then(%r!^I should get a zero exit(?:-| )status$!) do\n  step %(I should see \"EXIT STATUS: 0\" in the build output)\nend\n\n",
        "glue_code_file": "step_definitions.rb",
        "language": "ruby"
    },
    {
        "feature_file": "theme_gem.feature",
        "scenario": "Generating a new Jekyll Theme",
        "step_num": 3,
        "step_name": "the my-cool-theme directory should exist",
        "glue_code": "Then(%r!^the (.*) directory should +(not )?exist$!) do |dir, negative|\n  if negative.nil?\n    expect(Pathname.new(dir)).to exist\n  else\n    expect(Pathname.new(dir)).to_not exist\n  end\nend\n\n",
        "glue_code_file": "step_definitions.rb",
        "language": "ruby"
    },
    {
        "feature_file": "theme_gem.feature",
        "scenario": "Checking if a bonafide Theme gem will be built from generated scaffolding",
        "step_num": 1,
        "step_name": "I run jekyll new-theme my-cool-theme",
        "glue_code": "When(%r!^I run jekyll(.*)$!) do |args|\n  run_jekyll(args)\n  if args.include?(\"--verbose\") || ENV[\"DEBUG\"]\n    warn \"\\n#{jekyll_run_output}\\n\"\n  end\nend\n\n",
        "glue_code_file": "step_definitions.rb",
        "language": "ruby"
    },
    {
        "feature_file": "theme_gem.feature",
        "scenario": "Checking if a bonafide Theme gem will be built from generated scaffolding",
        "step_num": 2,
        "step_name": "the my-cool-theme directory should exist",
        "glue_code": "Then(%r!^the (.*) directory should +(not )?exist$!) do |dir, negative|\n  if negative.nil?\n    expect(Pathname.new(dir)).to exist\n  else\n    expect(Pathname.new(dir)).to_not exist\n  end\nend\n\n",
        "glue_code_file": "step_definitions.rb",
        "language": "ruby"
    },
    {
        "feature_file": "theme_gem.feature",
        "scenario": "Checking if a bonafide Theme gem will be built from generated scaffolding",
        "step_num": 3,
        "step_name": "I decide to build the theme gem",
        "glue_code": "When(%r!^I decide to build the theme gem$!) do\n  Dir.chdir(Paths.theme_gem_dir)\n  [\n    \"_includes/blank.html\",\n    \"_sass/blank.scss\",\n    \"assets/blank.scss\",\n    \"_config.yml\"\n  ].each do |filename|\n    File.new(filename, \"w\")\n  end\nend\n\n",
        "glue_code_file": "step_definitions.rb",
        "language": "ruby"
    },
    {
        "feature_file": "theme_gem.feature",
        "scenario": "Checking if a bonafide Theme gem will be built from generated scaffolding",
        "step_num": 4,
        "step_name": "the \"_includes/blank.html\" file should exist",
        "glue_code": "Then(%r!^the \"(.*)\" file should +(not )?exist$!) do |file, negative|\n  if negative.nil?\n    expect(Pathname.new(file)).to exist\n  else\n    expect(Pathname.new(file)).to_not exist\n  end\nend\n\n",
        "glue_code_file": "step_definitions.rb",
        "language": "ruby"
    },
    {
        "feature_file": "theme_gem.feature",
        "scenario": "Checking if a bonafide Theme gem will be built from generated scaffolding",
        "step_num": 5,
        "step_name": "the \"_sass/blank.scss\" file should exist",
        "glue_code": "Then(%r!^the \"(.*)\" file should +(not )?exist$!) do |file, negative|\n  if negative.nil?\n    expect(Pathname.new(file)).to exist\n  else\n    expect(Pathname.new(file)).to_not exist\n  end\nend\n\n",
        "glue_code_file": "step_definitions.rb",
        "language": "ruby"
    },
    {
        "feature_file": "theme_gem.feature",
        "scenario": "Checking if a bonafide Theme gem will be built from generated scaffolding",
        "step_num": 6,
        "step_name": "the \"assets/blank.scss\" file should exist",
        "glue_code": "Then(%r!^the \"(.*)\" file should +(not )?exist$!) do |file, negative|\n  if negative.nil?\n    expect(Pathname.new(file)).to exist\n  else\n    expect(Pathname.new(file)).to_not exist\n  end\nend\n\n",
        "glue_code_file": "step_definitions.rb",
        "language": "ruby"
    },
    {
        "feature_file": "theme_gem.feature",
        "scenario": "Checking if a bonafide Theme gem will be built from generated scaffolding",
        "step_num": 7,
        "step_name": "I run git add .",
        "glue_code": "When(%r!^I run git add .$!) do\n  run_in_shell(\"git\", \"add\", \".\", \"--verbose\")\nend\n\n",
        "glue_code_file": "step_definitions.rb",
        "language": "ruby"
    },
    {
        "feature_file": "theme_gem.feature",
        "scenario": "Checking if a bonafide Theme gem will be built from generated scaffolding",
        "step_num": 8,
        "step_name": "I should get an updated git index",
        "glue_code": "Then(%r!^I should get an updated git index$!) do\n  index = %w(\n    .gitignore\n    Gemfile\n    LICENSE.txt\n    README.md\n    _config.yml\n    _includes/blank.html\n    _layouts/default.html\n    _layouts/page.html\n    _layouts/post.html\n    _sass/blank.scss\n    assets/blank.scss\n    my-cool-theme.gemspec\n  )\n  index.each do |file|\n    expect(jekyll_run_output).to match file\n  end\nend\n\n",
        "glue_code_file": "step_definitions.rb",
        "language": "ruby"
    },
    {
        "feature_file": "theme_gem.feature",
        "scenario": "Checking if a bonafide Theme gem will be built from generated scaffolding",
        "step_num": 9,
        "step_name": "I run gem build --force my-cool-theme.gemspec",
        "glue_code": "When(%r!^I run gem(.*)$!) do |args|\n  run_rubygem(args)\n  if args.include?(\"--verbose\") || ENV[\"DEBUG\"]\n    warn \"\\n#{jekyll_run_output}\\n\"\n  end\nend\n\n",
        "glue_code_file": "step_definitions.rb",
        "language": "ruby"
    },
    {
        "feature_file": "theme_gem.feature",
        "scenario": "Checking if a bonafide Theme gem will be built from generated scaffolding",
        "step_num": 10,
        "step_name": "the \"./my-cool-theme-0.1.0.gem\" file should exist",
        "glue_code": "Then(%r!^the \"(.*)\" file should +(not )?exist$!) do |file, negative|\n  if negative.nil?\n    expect(Pathname.new(file)).to exist\n  else\n    expect(Pathname.new(file)).to_not exist\n  end\nend\n\n",
        "glue_code_file": "step_definitions.rb",
        "language": "ruby"
    },
    {
        "feature_file": "theme_gem.feature",
        "scenario": "Checking if a bonafide Theme gem will be built from generated scaffolding",
        "step_num": 11,
        "step_name": "I run gem unpack my-cool-theme-0.1.0.gem",
        "glue_code": "When(%r!^I run gem(.*)$!) do |args|\n  run_rubygem(args)\n  if args.include?(\"--verbose\") || ENV[\"DEBUG\"]\n    warn \"\\n#{jekyll_run_output}\\n\"\n  end\nend\n\n",
        "glue_code_file": "step_definitions.rb",
        "language": "ruby"
    },
    {
        "feature_file": "theme_gem.feature",
        "scenario": "Checking if a bonafide Theme gem will be built from generated scaffolding",
        "step_num": 12,
        "step_name": "the my-cool-theme-0.1.0 directory should exist",
        "glue_code": "Then(%r!^the (.*) directory should +(not )?exist$!) do |dir, negative|\n  if negative.nil?\n    expect(Pathname.new(dir)).to exist\n  else\n    expect(Pathname.new(dir)).to_not exist\n  end\nend\n\n",
        "glue_code_file": "step_definitions.rb",
        "language": "ruby"
    },
    {
        "feature_file": "theme_gem.feature",
        "scenario": "Checking if a bonafide Theme gem will be built from generated scaffolding",
        "step_num": 13,
        "step_name": "the \"my-cool-theme-0.1.0/_layouts/default.html\" file should exist",
        "glue_code": "Then(%r!^the \"(.*)\" file should +(not )?exist$!) do |file, negative|\n  if negative.nil?\n    expect(Pathname.new(file)).to exist\n  else\n    expect(Pathname.new(file)).to_not exist\n  end\nend\n\n",
        "glue_code_file": "step_definitions.rb",
        "language": "ruby"
    },
    {
        "feature_file": "theme_gem.feature",
        "scenario": "Checking if a bonafide Theme gem will be built from generated scaffolding",
        "step_num": 14,
        "step_name": "the \"my-cool-theme-0.1.0/_includes/blank.html\" file should exist",
        "glue_code": "Then(%r!^the \"(.*)\" file should +(not )?exist$!) do |file, negative|\n  if negative.nil?\n    expect(Pathname.new(file)).to exist\n  else\n    expect(Pathname.new(file)).to_not exist\n  end\nend\n\n",
        "glue_code_file": "step_definitions.rb",
        "language": "ruby"
    },
    {
        "feature_file": "theme_gem.feature",
        "scenario": "Checking if a bonafide Theme gem will be built from generated scaffolding",
        "step_num": 15,
        "step_name": "the \"my-cool-theme-0.1.0/_sass/blank.scss\" file should exist",
        "glue_code": "Then(%r!^the \"(.*)\" file should +(not )?exist$!) do |file, negative|\n  if negative.nil?\n    expect(Pathname.new(file)).to exist\n  else\n    expect(Pathname.new(file)).to_not exist\n  end\nend\n\n",
        "glue_code_file": "step_definitions.rb",
        "language": "ruby"
    },
    {
        "feature_file": "theme_gem.feature",
        "scenario": "Checking if a bonafide Theme gem will be built from generated scaffolding",
        "step_num": 16,
        "step_name": "the \"my-cool-theme-0.1.0/assets/blank.scss\" file should exist",
        "glue_code": "Then(%r!^the \"(.*)\" file should +(not )?exist$!) do |file, negative|\n  if negative.nil?\n    expect(Pathname.new(file)).to exist\n  else\n    expect(Pathname.new(file)).to_not exist\n  end\nend\n\n",
        "glue_code_file": "step_definitions.rb",
        "language": "ruby"
    },
    {
        "feature_file": "theme_gem.feature",
        "scenario": "Checking if a bonafide Theme gem will be built from generated scaffolding",
        "step_num": 17,
        "step_name": "the \"my-cool-theme-0.1.0/_config.yml\" file should exist",
        "glue_code": "Then(%r!^the \"(.*)\" file should +(not )?exist$!) do |file, negative|\n  if negative.nil?\n    expect(Pathname.new(file)).to exist\n  else\n    expect(Pathname.new(file)).to_not exist\n  end\nend\n\n",
        "glue_code_file": "step_definitions.rb",
        "language": "ruby"
    },
    {
        "feature_file": "theme_gem.feature",
        "scenario": "Checking if a bonafide Theme gem will be built from generated scaffolding",
        "step_num": 18,
        "step_name": "the my-cool-theme-0.1.0/.git directory should not exist",
        "glue_code": "Then(%r!^the (.*) directory should +(not )?exist$!) do |dir, negative|\n  if negative.nil?\n    expect(Pathname.new(dir)).to exist\n  else\n    expect(Pathname.new(dir)).to_not exist\n  end\nend\n\n",
        "glue_code_file": "step_definitions.rb",
        "language": "ruby"
    },
    {
        "feature_file": "theme_gem.feature",
        "scenario": "Checking if a bonafide Theme gem will be built from generated scaffolding",
        "step_num": 19,
        "step_name": "the \"my-cool-theme-0.1.0/.gitignore\" file should not exist",
        "glue_code": "Then(%r!^the \"(.*)\" file should +(not )?exist$!) do |file, negative|\n  if negative.nil?\n    expect(Pathname.new(file)).to exist\n  else\n    expect(Pathname.new(file)).to_not exist\n  end\nend\n\n",
        "glue_code_file": "step_definitions.rb",
        "language": "ruby"
    },
    {
        "feature_file": "theme_gem.feature",
        "scenario": "Checking if a bonafide Theme gem will be built from generated scaffolding",
        "step_num": 20,
        "step_name": "the \"my-cool-theme-0.1.0/Gemfile\" file should not exist",
        "glue_code": "Then(%r!^the \"(.*)\" file should +(not )?exist$!) do |file, negative|\n  if negative.nil?\n    expect(Pathname.new(file)).to exist\n  else\n    expect(Pathname.new(file)).to_not exist\n  end\nend\n\n",
        "glue_code_file": "step_definitions.rb",
        "language": "ruby"
    },
    {
        "feature_file": "theme_gem.feature",
        "scenario": "Checking if a bonafide Theme gem will be built from generated scaffolding",
        "step_num": 21,
        "step_name": "the \"my-cool-theme-0.1.0/my-cool-theme.gemspec\" file should not exist",
        "glue_code": "Then(%r!^the \"(.*)\" file should +(not )?exist$!) do |file, negative|\n  if negative.nil?\n    expect(Pathname.new(file)).to exist\n  else\n    expect(Pathname.new(file)).to_not exist\n  end\nend\n\n",
        "glue_code_file": "step_definitions.rb",
        "language": "ruby"
    }
]