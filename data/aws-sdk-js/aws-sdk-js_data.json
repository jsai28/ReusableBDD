[
    {
        "feature_file": "acm.feature",
        "test_num": 1,
        "test_case": "Making a request",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"listCertificates\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"CertificateSummaryList\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "acm.feature",
        "test_num": 2,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"describeCertificate\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ValidationException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "apigateway.feature",
        "test_num": 3,
        "test_case": "Making a request",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"getRestApis\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"items\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "apigateway.feature",
        "test_num": 4,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"getRestApi\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"NotFoundException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "autoscaling.feature",
        "test_num": 5,
        "test_case": "Managing auto scaling groups",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a launch configuration with name \"launch-config-integ\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I describe launch configurations",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the list should contain the launch configuration \"launch-config-integ\"",
                "glue_code": "this.assert.contains(this.data.LaunchConfigurations, function(configuration) {\n      return configuration.LaunchConfigurationName === name;",
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "I delete the launch configuration \"launch-config-integ\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "autoscaling.feature",
        "test_num": 6,
        "test_case": "Paginating responses",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a launch configuration with name \"launch-config-integ-1\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I create a launch configuration with name \"launch-config-integ-2\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I paginate the \"describeLaunchConfigurations\" operation with limit 1",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "I should get more than one page",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "I should get numPages - 1 markers",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 6,
                "step_name": "the last page should not contain a marker",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 7,
                "step_name": "I delete the launch configuration \"launch-config-integ-1\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 8,
                "step_name": "I delete the launch configuration \"launch-config-integ-2\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "autoscaling.feature",
        "test_num": 7,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a launch configuration with name \"\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ValidationError\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the error message should contain",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "cloudformation.feature",
        "test_num": 8,
        "test_case": "Describing stacks",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"describeStacks\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"Stacks\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "cloudformation.feature",
        "test_num": 9,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a CloudFormation stack with name prefix \"\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ValidationError\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "cloudformation.feature",
        "test_num": 10,
        "test_case": "Paginating responses",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I paginate the \"listStacks\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I should get at least one page",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the last page should not contain a marker",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "cloudfront.feature",
        "test_num": 11,
        "test_case": "Listing distributions",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I list CloudFront distributions",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the result at DistributionList should contain a property Quantity with a number",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the result at DistributionList should contain a property Items with an Array",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "cloudfront.feature",
        "test_num": 12,
        "test_case": "Creating a distribution",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a CloudFront distribution with name prefix \"aws-js-sdk\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"NoSuchOrigin\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the status code should be 404",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "cloudfront.feature",
        "test_num": 13,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a CloudFront distribution with name prefix \"\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"InvalidArgument\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "cloudsearch.feature",
        "test_num": 14,
        "test_case": "Describing domain",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"describeDomains\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"DomainStatusList\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "cloudsearch.feature",
        "test_num": 15,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a domain with name prefix \"\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ValidationError\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "cloudtrail.feature",
        "test_num": 16,
        "test_case": "Describing trails",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I describe trails",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the status code should be 200",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "cloudtrail.feature",
        "test_num": 17,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a trail with an invalid name",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"InvalidTrailNameException\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the error message should contain",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "cloudwatch.feature",
        "test_num": 18,
        "test_case": "Alarms",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a CloudWatch alarm with prefix \"aws-js-sdk-alarm\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I list the CloudWatch alarms",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the list should contain the CloudWatch alarm",
                "glue_code": "var name = this.cloudWatchAlarm.AlarmName;\n    this.assert.contains(this.data.MetricAlarms, function(alarm) {\n      return alarm.AlarmName === name;",
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "I delete the CloudWatch alarm",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "cloudwatch.feature",
        "test_num": 19,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a CloudWatch alarm with name \"\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ValidationError\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "cloudwatchevents.feature",
        "test_num": 20,
        "test_case": "Making a request",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"listRules\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"Rules\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "cloudwatchevents.feature",
        "test_num": 21,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"describeRule\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ResourceNotFoundException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "cloudwatchlogs.feature",
        "test_num": 22,
        "test_case": "Log Groups",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a CloudWatch logGroup with prefix \"aws-js-sdk\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I list the CloudWatch logGroups",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the list should contain the CloudWatch logGroup",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "I delete the CloudWatch logGroup",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "cloudwatchlogs.feature",
        "test_num": 23,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a CloudWatch logGroup with prefix \"\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"InvalidParameterException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "codecommit.feature",
        "test_num": 24,
        "test_case": "Listing repositories",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"listRepositories\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"repositories\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "codecommit.feature",
        "test_num": 25,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"listBranches\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"RepositoryDoesNotExistException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "codedeploy.feature",
        "test_num": 26,
        "test_case": "Listing Applicaitons",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"listApplications\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"applications\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "codedeploy.feature",
        "test_num": 27,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"createApplication\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ApplicationNameRequiredException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "codepipeline.feature",
        "test_num": 28,
        "test_case": "Listing repositories",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"listPipelines\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"pipelines\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "codepipeline.feature",
        "test_num": 29,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"getPipeline\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"PipelineNotFoundException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "cognitoidentity.feature",
        "test_num": 30,
        "test_case": "Identity Pools",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a Cognito identity pool with prefix \"awssdkjs\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I describe the Cognito identity pool ID",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the status code should be 200",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "I delete the Cognito identity pool",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "cognitoidentity.feature",
        "test_num": 31,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a Cognito identity pool with prefix \"\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ValidationException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "cognitosync.feature",
        "test_num": 32,
        "test_case": "Identity Pool Usage",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I list Cognito identity pool usage",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the status code should be 200",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "cognitosync.feature",
        "test_num": 33,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I list Cognito data sets with identity pool id \"INVALID\" and identity id \"A:B:C\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error message should contain",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "configservice.feature",
        "test_num": 34,
        "test_case": "Listing delivery channels",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"describeDeliveryChannels\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"DeliveryChannels\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "configservice.feature",
        "test_num": 35,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"putDeliveryChannel\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ValidationException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "datapipeline.feature",
        "test_num": 36,
        "test_case": "Listing pipelines",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"listPipelines\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"pipelineIdList\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "datapipeline.feature",
        "test_num": 37,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a Data Pipeline with name prefix \"\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ValidationException\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the error message should match",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "devicefarm.feature",
        "test_num": 38,
        "test_case": "Listing devices",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"listDevices\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"devices\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "devicefarm.feature",
        "test_num": 39,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"getDevice\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"NotFoundException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "directconnect.feature",
        "test_num": 40,
        "test_case": "describe connections",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"describeConnections\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"connections\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "directconnect.feature",
        "test_num": 41,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a Direct Connect connection with an invalid location",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"DirectConnectClientException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "directoryservice.feature",
        "test_num": 42,
        "test_case": "Listing directories",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"describeDirectories\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"DirectoryDescriptions\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "directoryservice.feature",
        "test_num": 43,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"createDirectory\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ValidationException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "dms.feature",
        "test_num": 44,
        "test_case": "Making a request",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"describeEndpoints\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"Endpoints\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "dms.feature",
        "test_num": 45,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"startReplicationTask\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"InvalidParameterValueException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "crc32.feature",
        "test_num": 46,
        "test_case": "Retry on corrupted request",
        "steps": [
            {
                "step_num": 1,
                "step_name": "my first request is corrupted with CRC checking ON",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be retried",
                "glue_code": "if (retry && this.response.retryCount > 0) callback.fail('Request was incorrectly retried');\n    if (!retry && this.response.retryCount == 0) callback.fail('Request was incorrectly retried');\n    callback();",
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the request should not fail with a CRC checking error",
                "glue_code": "if (failed && this.error) callback.fail(this.error);\n    if (!failed && !this.error) callback.fail('Did not fail when should have');\n    callback();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "crc32.feature",
        "test_num": 47,
        "test_case": "Failed retries on corrupted request",
        "steps": [
            {
                "step_num": 1,
                "step_name": "all of my requests are corrupted with CRC checking ON",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request is retried the maximum number of times",
                "glue_code": "if (this.response.retryCount != 2) callback.fail('Incorrect retry count');\n    callback();",
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the request should fail with a CRC checking error",
                "glue_code": "if (failed && this.error) callback.fail(this.error);\n    if (!failed && !this.error) callback.fail('Did not fail when should have');\n    callback();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "crc32.feature",
        "test_num": 48,
        "test_case": "Ignore corrupted request with CRC checking OFF",
        "steps": [
            {
                "step_num": 1,
                "step_name": "my first request is corrupted with CRC checking OFF",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should not be retried",
                "glue_code": "if (retry && this.response.retryCount > 0) callback.fail('Request was incorrectly retried');\n    if (!retry && this.response.retryCount == 0) callback.fail('Request was incorrectly retried');\n    callback();",
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the request should not fail with a CRC checking error",
                "glue_code": "if (failed && this.error) callback.fail(this.error);\n    if (!failed && !this.error) callback.fail('Did not fail when should have');\n    callback();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "tables.feature",
        "test_num": 49,
        "test_case": "Creating a table",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a table",
                "glue_code": "var world = this;\n    this.tableName = this.uniqueName(\"aws-sdk-js-integration-\");\n    createTable(world, callback);",
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the table should eventually exist",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "tables.feature",
        "test_num": 50,
        "test_case": "Item CRUD",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I have a table",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I put the item",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the item with id \"foo\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "it should have attribute \"data.S\" containing \"b\u00e5r\"",
                "glue_code": "this.assert.equal(jmespath.search(this.data.Item, attr), value);\n    next();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "tables.feature",
        "test_num": 51,
        "test_case": "UTF-8 support",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I try to delete an item with key \"f\u00f8\u00f8\" from table \"table\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ResourceNotFoundException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "tables.feature",
        "test_num": 52,
        "test_case": "Improper table deletion",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I try to delete a table with an empty table parameter",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ValidationException\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the status code should be 400",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "tables.feature",
        "test_num": 53,
        "test_case": "Recursive Attributes",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I have a table",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I put the item",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the item with id \"fooRecursive\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "it should have attribute \"data.M.attr1.L[1].L[0].M.attr12.S\" containing \"value2\"",
                "glue_code": "this.assert.equal(jmespath.search(this.data.Item, attr), value);\n    next();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "tables.feature",
        "test_num": 54,
        "test_case": "Deleting the created table",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I delete the table",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the table should eventually not exist",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "dynamodbstreams.feature",
        "test_num": 55,
        "test_case": "Listing streams",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"listStreams\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"Streams\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "dynamodbstreams.feature",
        "test_num": 56,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"describeStream\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ValidationException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "ec2.feature",
        "test_num": 57,
        "test_case": "DescribeRegions",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I describe EC2 regions \"us-east-1, us-west-1\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the EC2 endpoint for \"us-east-1\" should be \"ec2.us-east-1.amazonaws.com\"",
                "glue_code": "this.assert.contains(this.data.Regions, function(region) {\n      return region.Endpoint === endpoint;",
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the EC2 endpoint for \"us-west-1\" should be \"ec2.us-west-1.amazonaws.com\"",
                "glue_code": "this.assert.contains(this.data.Regions, function(region) {\n      return region.Endpoint === endpoint;",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "ec2.feature",
        "test_num": 58,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I describe the EC2 instance \"\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"MissingParameter\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the status code should be 400",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "ec2.feature",
        "test_num": 59,
        "test_case": "Encrypted CopySnapshot",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I attempt to copy an encrypted snapshot across regions",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the copy snapshot attempt should be successful",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "ec2.feature",
        "test_num": 60,
        "test_case": "Paginating responses",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I paginate the \"describeReservedInstancesOfferings\" operation with limit 20 and max pages 3",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I should get 3 pages",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "ecr.feature",
        "test_num": 61,
        "test_case": "Making a request",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"describeRepositories\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"repositories\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "ecr.feature",
        "test_num": 62,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"listImages\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"RepositoryNotFoundException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "ecs.feature",
        "test_num": 63,
        "test_case": "Listing clusters",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"listClusters\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"clusterArns\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "ecs.feature",
        "test_num": 64,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"stopTask\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the status code should be 400",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "efs.feature",
        "test_num": 65,
        "test_case": "Listing file systems",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"describeFileSystems\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"FileSystems\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "efs.feature",
        "test_num": 66,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"deleteFileSystem\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ValidationException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "elasticache.feature",
        "test_num": 67,
        "test_case": "Creating and deleting cache parameter groups",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a cache parameter group with name prefix \"aws-js-sdk\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the cache parameter group name is in the result",
                "glue_code": "var name = this.data.CacheParameterGroup.CacheParameterGroupName;\n    this.assert.equal(name, this.cacheGroupName);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I describe the cache parameter groups",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the value at \"CacheParameterGroups\" should be a list",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "the cache parameter group should be described",
                "glue_code": "var item = this.data.CacheParameterGroups[0];\n    this.assert.equal(item.CacheParameterGroupName, this.cacheGroupName);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 6,
                "step_name": "I delete the cache parameter group",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "elasticache.feature",
        "test_num": 68,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a cache parameter group with name prefix \"\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"InvalidParameterValue\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the error message should contain",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "elasticbeanstalk.feature",
        "test_num": 69,
        "test_case": "Creating applications and application versions",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create an Elastic Beanstalk application with name prefix \"aws-js-sdk\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I create an Elastic Beanstalk application version with label \"1.0.0\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I describe the Elastic Beanstalk application",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the result should contain the Elastic Beanstalk application version",
                "glue_code": "this.assert.deepEqual(this.data.Applications[0].Versions, [this.appVersion]);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "the result should contain the Elastic Beanstalk application name",
                "glue_code": "this.assert.equal(this.data.Applications[0].ApplicationName, this.appName);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 6,
                "step_name": "I delete the Elastic Beanstalk application",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "elasticbeanstalk.feature",
        "test_num": 70,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create an Elastic Beanstalk application with name prefix \"\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ValidationError\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the error message should match",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "elastictranscoder.feature",
        "test_num": 71,
        "test_case": "Pipeline CRUD",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create an IAM role with name prefix \"aws-sdk-js\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I create a bucket",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I create an Elastic Transcoder pipeline with name prefix \"aws-sdk-js\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "I list pipelines",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "the list should contain the pipeline",
                "glue_code": "var id = this.pipelineId;\n    this.assert.contains(this.data.Pipelines, function (pipeline) {\n      return pipeline.Id === id;",
                "language": "js"
            },
            {
                "step_num": 6,
                "step_name": "I pause the pipeline",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 7,
                "step_name": "I read the pipeline",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 8,
                "step_name": "the pipeline status should be \"Paused\"",
                "glue_code": "this.assert.equal(this.data.Pipeline.Status, status);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 9,
                "step_name": "I delete the pipeline",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 10,
                "step_name": "I delete the bucket",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 11,
                "step_name": "I delete the IAM role",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "elastictranscoder.feature",
        "test_num": 72,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create an Elastic Transcoder pipeline with name prefix \"\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ValidationException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "elb.feature",
        "test_num": 73,
        "test_case": "Making a request",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"describeLoadBalancers\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "elb.feature",
        "test_num": 74,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a load balancer with name prefix \"verylongelasticloadbalancername\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ValidationError\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the status code should be 400",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "elbv2.feature",
        "test_num": 75,
        "test_case": "Making a request",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"describeTargetGroups\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"TargetGroups\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "elbv2.feature",
        "test_num": 76,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"describeTags\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ValidationError\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "emr.feature",
        "test_num": 77,
        "test_case": "Making a request",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"listClusters\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"Clusters\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "emr.feature",
        "test_num": 78,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run an EMR job flow with invalid parameters",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ValidationException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "es.feature",
        "test_num": 79,
        "test_case": "Making a request",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"listDomainNames\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"DomainNames\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "es.feature",
        "test_num": 80,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"describeElasticsearchDomain\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ResourceNotFoundException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "gamelift.feature",
        "test_num": 81,
        "test_case": "Making a request",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"listBuilds\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"Builds\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "gamelift.feature",
        "test_num": 82,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"describeAlias\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"InvalidRequestException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "glacier.feature",
        "test_num": 83,
        "test_case": "Creating a vault",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I have a Glacier vault",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I describe the Glacier vault",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the result should contain a property NumberOfArchives with a number",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "glacier.feature",
        "test_num": 84,
        "test_case": "Uploading an archive",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I have a Glacier vault",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I upload a 0.25MB Glacier archive to the vault",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the result should contain the Glacier archive ID",
                "glue_code": "this.archiveId = this.data.archiveId;\n    callback();",
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the result should contain the same tree hash checksum",
                "glue_code": "var hash = this.response.request.httpRequest.headers['x-amz-sha256-tree-hash'];\n    this.assert.equal(this.data.checksum, hash);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "I delete the Glacier archive",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "glacier.feature",
        "test_num": 85,
        "test_case": "Multi-part upload",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I have a Glacier vault",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I initiate a Glacier multi-part upload on a 2.5MB archive in 1MB chunks",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the result should contain the Glacier multi-part upload ID",
                "glue_code": "this.uploadId = this.data.uploadId;\n    callback();",
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "I send the Glacier archive data in chunks",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "I complete the Glacier multi-part upload",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 6,
                "step_name": "the result should contain the Glacier archive ID",
                "glue_code": "this.archiveId = this.data.archiveId;\n    callback();",
                "language": "js"
            },
            {
                "step_num": 7,
                "step_name": "the result should contain the same tree hash checksum",
                "glue_code": "var hash = this.response.request.httpRequest.headers['x-amz-sha256-tree-hash'];\n    this.assert.equal(this.data.checksum, hash);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 8,
                "step_name": "I delete the Glacier archive",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "glacier.feature",
        "test_num": 86,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I have a Glacier vault",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I upload a 0.05MB Glacier archive to the vault with incorrect checksum",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the error code should be \"InvalidParameterValueException\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the error message should match",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "I upload a 0.05MB Glacier archive to the vault with invalid checksum",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 6,
                "step_name": "the error code should be \"InvalidParameterValueException\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 7,
                "step_name": "the error message should equal",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "iam.feature",
        "test_num": 87,
        "test_case": "Users",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I have an IAM username \"js-test\"",
                "glue_code": "this.iamUserArn = '';\n    this.iamUser = this.uniqueName(name);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I create an IAM user with the username",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I get the IAM user",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the IAM user should exist",
                "glue_code": "this.assert.equal(this.data.User.UserName, this.iamUser);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "I delete the IAM user",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "iam.feature",
        "test_num": 88,
        "test_case": "Roles",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create an IAM role with name prefix \"aws-sdk-js\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the IAM role should exist",
                "glue_code": "this.assert.compare(this.iamRoleArn.length, '>', 0);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I delete the IAM role",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "iam.feature",
        "test_num": 89,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I have an IAM username \"js-test-dupe\"",
                "glue_code": "this.iamUserArn = '';\n    this.iamUser = this.uniqueName(name);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I create an IAM user with the username",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I create an IAM user with the username",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the error code should be \"EntityAlreadyExists\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "I delete the IAM user",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "inspector.feature",
        "test_num": 90,
        "test_case": "Making a request",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"listRulesPackages\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"rulesPackageArns\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "inspector.feature",
        "test_num": 91,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"stopAssessmentRun\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"InvalidInputException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "iot.feature",
        "test_num": 92,
        "test_case": "Making a request",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"listPolicies\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"policies\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "iot.feature",
        "test_num": 93,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"describeCertificate\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"InvalidRequestException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "kinesis.feature",
        "test_num": 94,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I try to describe a stream in Kinesis",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ResourceNotFoundException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "kms.feature",
        "test_num": 95,
        "test_case": "List keys",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"listKeys\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"Keys\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "kms.feature",
        "test_num": 96,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"createAlias\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ValidationException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "lambda.feature",
        "test_num": 97,
        "test_case": "Listing functions",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"listFunctions\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"Functions\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "lambda.feature",
        "test_num": 98,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"invoke\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ResourceNotFoundException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "machinelearning.feature",
        "test_num": 99,
        "test_case": "Describing MLModels",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"describeMLModels\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"Results\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "machinelearning.feature",
        "test_num": 100,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"getBatchPrediction\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ResourceNotFoundException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "mobileanalytics.feature",
        "test_num": 101,
        "test_case": "Putting events",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"putEvents\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "mobileanalytics.feature",
        "test_num": 102,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"putEvents\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"BadRequestException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "opsworks.feature",
        "test_num": 103,
        "test_case": "Creating and deleting user profiles",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I have an IAM username \"aws-js-sdk\"",
                "glue_code": "this.iamUserArn = '';\n    this.iamUser = this.uniqueName(name);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I create an IAM user with the username",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I create an OpsWorks user profile with the IAM user ARN",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the IAM user ARN is in the result",
                "glue_code": "this.assert.equal(this.data.IamUserArn, this.iamUserArn);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "I describe the OpsWorks user profiles",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 6,
                "step_name": "the IAM user ARN should be in the result",
                "glue_code": "this.assert.equal(this.data.UserProfiles[0].IamUserArn, this.iamUserArn);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 7,
                "step_name": "the name should be equal to the IAM username",
                "glue_code": "this.assert.equal(this.data.UserProfiles[0].Name, this.iamUser);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 8,
                "step_name": "the SSH username should be equal to the IAM username",
                "glue_code": "this.assert.equal(this.data.UserProfiles[0].SshUsername, this.iamUser);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 9,
                "step_name": "I delete the OpsWorks user profile",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 10,
                "step_name": "I delete the IAM user",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "opsworks.feature",
        "test_num": 104,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I have an IAM username \"\"",
                "glue_code": "this.iamUserArn = '';\n    this.iamUser = this.uniqueName(name);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I create an OpsWorks user profile with the IAM user ARN",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the error code should be \"ValidationException\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the status code should be 400",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "rds.feature",
        "test_num": 105,
        "test_case": "Describe DB security group",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"describeDBSecurityGroups\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"DBSecurityGroups\" should be a list",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the value at \"DBSecurityGroups\" should contain \"DBSecurityGroupDescription\" with \"default\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "rds.feature",
        "test_num": 106,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a RDS security group with prefix name \"\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"InvalidParameterValue\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the status code should be 400",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "rds.feature",
        "test_num": 107,
        "test_case": "Paginating responses",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I paginate the \"describeReservedDBInstancesOfferings\" operation with limit 100",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I should get more than one page",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I should get numPages - 1 markers",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the last page should not contain a marker",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "rds.feature",
        "test_num": 108,
        "test_case": "Paginating responses (with callback)",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I paginate the \"describeReservedDBInstancesOfferings\" operation asynchronously with limit 100",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I should be able to asynchronously paginate all pages",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "redshift.feature",
        "test_num": 109,
        "test_case": "Describe cluster parameter groups",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"describeClusterParameterGroups\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"ParameterGroups\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "redshift.feature",
        "test_num": 110,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a Redshift cluster parameter group with prefix name \"\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"InvalidParameterValue\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the error message should contain",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "route53.feature",
        "test_num": 111,
        "test_case": "Making a request",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"listHostedZones\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"HostedZones\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "route53.feature",
        "test_num": 112,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"getHostedZone\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"NoSuchHostedZone\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "route53domains.feature",
        "test_num": 113,
        "test_case": "Feature",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I list Route53 domains",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"Domains\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "route53domains.feature",
        "test_num": 114,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I try to register a Route53 domain with invalid parameters",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"InvalidInput\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "buckets.feature",
        "test_num": 115,
        "test_case": "CRUD buckets using the classic endpoint",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I am using the S3 \"us-east-1\" region",
                "glue_code": "this.s3 = new this.AWS.S3({region: region",
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I create a bucket",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the bucket should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "I delete the bucket",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "the bucket should not exist",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "buckets.feature",
        "test_num": 116,
        "test_case": "CRUD buckets using a regional endpoint",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I am using the S3 \"us-west-2\" region",
                "glue_code": "this.s3 = new this.AWS.S3({region: region",
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I create a bucket",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the bucket should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "I delete the bucket",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "the bucket should not exist",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "buckets.feature",
        "test_num": 117,
        "test_case": "Support us-east-1 regional endpoint",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I am using the S3 us-east-1 regional endpoint",
                "glue_code": "this.s3 = new this.AWS.S3({region: 'us-east-1', s3UsEast1RegionalEndpoint: 'regional'",
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I create a bucket",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the bucket should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "I delete the bucket",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "the bucket should not exist",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "buckets.feature",
        "test_num": 118,
        "test_case": "Bucket CORS",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a bucket",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I put a bucket CORS configuration",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I get the bucket CORS configuration",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the AllowedMethods list should inclue \"DELETE POST PUT\"",
                "glue_code": "this.assert.equal(this.data.CORSRules[0].AllowedMethods.sort().join(' '), 'DELETE POST PUT');\n    callback();",
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "the AllowedOrigin value should equal \"http://example.com\"",
                "glue_code": "this.assert.equal(this.data.CORSRules[0].AllowedOrigins[0], value);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 6,
                "step_name": "the AllowedHeader value should equal \"*\"",
                "glue_code": "this.assert.equal(this.data.CORSRules[0].AllowedHeaders[0], value);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 7,
                "step_name": "the ExposeHeader value should equal \"x-amz-server-side-encryption\"",
                "glue_code": "this.assert.equal(this.data.CORSRules[0].ExposeHeaders[0], value);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 8,
                "step_name": "the MaxAgeSeconds value should equal 5000",
                "glue_code": "this.assert.equal(this.data.CORSRules[0].MaxAgeSeconds, parseInt(value));\n    callback();",
                "language": "js"
            },
            {
                "step_num": 9,
                "step_name": "I delete the bucket",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "buckets.feature",
        "test_num": 119,
        "test_case": "Bucket lifecycles",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a bucket",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I put a transition lifecycle configuration on the bucket with prefix \"/\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I get the transition lifecycle configuration on the bucket",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the lifecycle configuration should have transition days of 0",
                "glue_code": "this.assert.equal(this.data.Rules[0].Transition.Days, 0);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "the lifecycle configuration should have transition storage class of \"GLACIER\"",
                "glue_code": "this.assert.equal(this.data.Rules[0].Transition.StorageClass, value);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 6,
                "step_name": "I delete the bucket",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "buckets.feature",
        "test_num": 120,
        "test_case": "Bucket Tagging",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a bucket",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I put a bucket tag with key \"KEY\" and value \"VALUE\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I get the bucket tagging",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the first tag in the tag set should have key and value \"KEY\", \"VALUE\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "I delete the bucket",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "buckets.feature",
        "test_num": 121,
        "test_case": "Access bucket following 307 redirects",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I am using the S3 \"us-east-1\" region with signatureVersion \"s3\"",
                "glue_code": "this.s3 = new this.AWS.S3({region: region, signatureVersion: signatureVersion",
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I create a bucket with the location constraint \"EU\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the bucket should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the bucket should have a location constraint of \"EU\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "I delete the bucket",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "buckets.feature",
        "test_num": 122,
        "test_case": "Working with bucket names that contain '.'",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a bucket with a DNS compatible name that contains a dot",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the bucket should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I delete the bucket",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the bucket should not exist",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "buckets.feature",
        "test_num": 123,
        "test_case": "Operating on a bucket using path style",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I force path style requests",
                "glue_code": "this.s3 = new this.AWS.S3({s3ForcePathStyle: true",
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I create a bucket",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I put \"abc\" to the key \"hello\" in the bucket",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the bucket name should be in the request path",
                "glue_code": "var path = this.response.request.httpRequest.path.split('/');\n    this.assert.equal(path[1], this.bucket);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "the bucket name should not be in the request host",
                "glue_code": "var host = this.response.request.httpRequest.endpoint.host;\n    this.assert.compare(host.indexOf(this.bucket), '<', 0);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 6,
                "step_name": "I delete the object \"hello\" from the bucket",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 7,
                "step_name": "I delete the bucket",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "buckets.feature",
        "test_num": 124,
        "test_case": "Follow 307 redirect on new buckets",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I am using the S3 \"us-east-1\" region with signatureVersion \"s3\"",
                "glue_code": "this.s3 = new this.AWS.S3({region: region, signatureVersion: signatureVersion",
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I create a bucket with the location constraint \"us-west-2\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I put a large buffer to the key \"largeobject\" in the bucket",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the object \"largeobject\" should exist in the bucket",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "I delete the object \"largeobject\" from the bucket",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 6,
                "step_name": "I delete the bucket",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "managed_upload.feature",
        "test_num": 125,
        "test_case": "Uploading an empty buffer",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I use S3 managed upload to upload an empty buffer to the key \"empty_upload_buffer\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the multipart upload should succeed",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the object \"empty_upload_buffer\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the ContentLength should equal 0",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "managed_upload.feature",
        "test_num": 126,
        "test_case": "Uploading a small buffer",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I use S3 managed upload to upload a small buffer to the key \"small_upload_buffer\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the multipart upload should succeed",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the object \"small_upload_buffer\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the ContentLength should equal 1048576",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "managed_upload.feature",
        "test_num": 127,
        "test_case": "Uploading a large buffer",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I use S3 managed upload to upload a large buffer to the key \"large_upload_buffer\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the multipart upload should succeed",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the object \"large_upload_buffer\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the ContentLength should equal 20971520",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "managed_upload.feature",
        "test_num": 128,
        "test_case": "Uploading an empty stream",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I use S3 managed upload to upload an empty stream to the key \"empty_upload_stream\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the multipart upload should succeed",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the object \"empty_upload_stream\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the ContentLength should equal 0",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "managed_upload.feature",
        "test_num": 129,
        "test_case": "Uploading a small stream",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I use S3 managed upload to upload a small stream to the key \"small_upload_stream\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the multipart upload should succeed",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I should get progress events",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the object \"small_upload_stream\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "the ContentLength should equal 1048576",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "managed_upload.feature",
        "test_num": 130,
        "test_case": "Uploading a large stream",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I use S3 managed upload to upload a large stream to the key \"large_upload_stream\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the multipart upload should succeed",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I should get progress events",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the object \"large_upload_stream\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "the ContentLength should equal 20971520",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "managed_upload.feature",
        "test_num": 131,
        "test_case": "Verifying uploaded data integrity",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I generate the MD5 checksum of a 20MB buffer",
                "glue_code": "this.uploadBuffer = this.createBuffer(size);\n    this.sentContentMD5 = this.AWS.util.crypto.md5(this.uploadBuffer, 'base64');\n    next();",
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I use S3 managed upload to upload the buffer to the key \"checksummed_data\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the object \"checksummed_data\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "I get the object \"checksummed_data\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "the HTTP response should have a content length of 20971520",
                "glue_code": "this.assert.equal(this.response.httpResponse.body.length, parseInt(contentLength));\n    next();",
                "language": "js"
            },
            {
                "step_num": 6,
                "step_name": "the MD5 checksum of the response data should equal the generated checksum",
                "glue_code": "var receivedContentMD5 = this.AWS.util.crypto.md5(this.data.Body.toString(), 'base64');\n    this.assert.equal(receivedContentMD5, this.sentContentMD5);\n    next();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "managed_upload.feature",
        "test_num": 132,
        "test_case": "Resuming an upload",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I use S3 managed upload to upload some 20MB buffer to the key \"broken_buffer\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I abort the upload",
                "glue_code": "this.managedUpload.abort();\n    callback();",
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I receive a \"RequestAbortedError\" error",
                "glue_code": "this.assert.equal(this.error.name, errName);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "I resume the upload",
                "glue_code": "var self = this;\n    self.managedUpload.send(function(err, data) {\n      self.error = err;\n      self.data = data;\n      callback();",
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "the object \"broken_buffer\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 6,
                "step_name": "the ContentLength should equal 20971520",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "managed_upload.feature",
        "test_num": 133,
        "test_case": "Resuming a partial upload",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I use S3 managed upload to partially upload some 20MB buffer to the key \"partial_buffer\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I receive a \"RequestAbortedError\" error",
                "glue_code": "this.assert.equal(this.error.name, errName);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I resume the upload",
                "glue_code": "var self = this;\n    self.managedUpload.send(function(err, data) {\n      self.error = err;\n      self.data = data;\n      callback();",
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the object \"partial_buffer\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "the ContentLength should equal 20971520",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 6,
                "step_name": "uploadPart should have been called 5 times",
                "glue_code": "this.assert.equal(this.progressEvents.length, count);\n    callback();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 134,
        "test_case": "CRUD objects",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I put \"world\" to the key \"hello\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the object \"hello\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I get the object \"hello\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the object \"hello\" should contain \"world\"",
                "glue_code": "this.assert.equal(this.data.Body.toString().replace('\\n', ''), contents);\n    next();",
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "I put \"new world\" to the key \"hello\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 6,
                "step_name": "the object \"hello\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 7,
                "step_name": "I get the object \"hello\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 8,
                "step_name": "the object \"hello\" should contain \"new world\"",
                "glue_code": "this.assert.equal(this.data.Body.toString().replace('\\n', ''), contents);\n    next();",
                "language": "js"
            },
            {
                "step_num": 9,
                "step_name": "I delete the object \"hello\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 10,
                "step_name": "the object \"hello\" should not exist",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 135,
        "test_case": "Content length",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I put \"foo\" to the key \"contentlength\" with ContentLength 3",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the object \"contentlength\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I get the object \"contentlength\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the object \"contentlength\" should contain \"foo\"",
                "glue_code": "this.assert.equal(this.data.Body.toString().replace('\\n', ''), contents);\n    next();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 136,
        "test_case": "Putting a multi-byte string to an object",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I put \"\u00e5\u00df\u2202\u0192\u00a9\" to the key \"multi\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the object \"multi\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I get the object \"multi\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the object \"multi\" should contain \"\u00e5\u00df\u2202\u0192\u00a9\"",
                "glue_code": "this.assert.equal(this.data.Body.toString().replace('\\n', ''), contents);\n    next();",
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "the HTTP response should have a content length of 11",
                "glue_code": "this.assert.equal(this.response.httpResponse.body.length, parseInt(contentLength));\n    next();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 137,
        "test_case": "Copying an object",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I put \"world\" to the key \"hello\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I copy the object \"hello\" to \"byebye\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the object \"byebye\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "I get the object \"byebye\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "the object \"byebye\" should contain \"world\"",
                "glue_code": "this.assert.equal(this.data.Body.toString().replace('\\n', ''), contents);\n    next();",
                "language": "js"
            },
            {
                "step_num": 6,
                "step_name": "I delete the object \"byebye\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 138,
        "test_case": "Private ACL",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I put \"world\" to the private key \"hello\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I get the object \"hello\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the object \"hello\" should contain \"world\"",
                "glue_code": "this.assert.equal(this.data.Body.toString().replace('\\n', ''), contents);\n    next();",
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "I delete the object \"hello\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 139,
        "test_case": "Putting nothing to an object",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I put \"\" to the key \"blank\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the object \"blank\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I get the object \"blank\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the object \"blank\" should contain \"\"",
                "glue_code": "this.assert.equal(this.data.Body.toString().replace('\\n', ''), contents);\n    next();",
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "the HTTP response should have a content length of 0",
                "glue_code": "this.assert.equal(this.response.httpResponse.body.length, parseInt(contentLength));\n    next();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 140,
        "test_case": "Putting and getting an empty buffer",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I put an empty buffer to the key \"emptybuffer\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the object \"emptybuffer\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I get the object \"emptybuffer\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the HTTP response should have a content length of 0",
                "glue_code": "this.assert.equal(this.response.httpResponse.body.length, parseInt(contentLength));\n    next();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 141,
        "test_case": "Putting and getting a small buffer",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I put a small buffer to the key \"smallbuffer\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the object \"smallbuffer\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I get the object \"smallbuffer\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the HTTP response should have a content length of 1048576",
                "glue_code": "this.assert.equal(this.response.httpResponse.body.length, parseInt(contentLength));\n    next();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 142,
        "test_case": "Putting and getting a large buffer",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I put a large buffer to the key \"largebuffer\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the object \"largebuffer\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I get the object \"largebuffer\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the HTTP response should have a content length of 20971520",
                "glue_code": "this.assert.equal(this.response.httpResponse.body.length, parseInt(contentLength));\n    next();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 143,
        "test_case": "Putting and getting an empty file",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I put an empty file to the key \"emptyfile\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the object \"emptyfile\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I get the object \"emptyfile\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the HTTP response should have a content length of 0",
                "glue_code": "this.assert.equal(this.response.httpResponse.body.length, parseInt(contentLength));\n    next();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 144,
        "test_case": "Putting and getting a small file",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I put a small file to the key \"smallfile\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the object \"smallfile\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I get the object \"smallfile\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the HTTP response should have a content length of 1048576",
                "glue_code": "this.assert.equal(this.response.httpResponse.body.length, parseInt(contentLength));\n    next();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 145,
        "test_case": "Putting and getting a large file",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I put a large file to the key \"largefile\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the object \"largefile\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I get the object \"largefile\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the HTTP response should have a content length of 20971520",
                "glue_code": "this.assert.equal(this.response.httpResponse.body.length, parseInt(contentLength));\n    next();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 146,
        "test_case": "Verifying data integrity",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I generate the MD5 checksum of \"SOME SAMPLE DATA\"",
                "glue_code": "this.sentContentMD5 = this.AWS.util.crypto.md5(data, 'base64');\n    next();",
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I put \"SOME SAMPLE DATA\" to the key \"checksummed_data\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the object \"checksummed_data\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "I get the object \"checksummed_data\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "the object \"checksummed_data\" should contain \"SOME SAMPLE DATA\"",
                "glue_code": "this.assert.equal(this.data.Body.toString().replace('\\n', ''), contents);\n    next();",
                "language": "js"
            },
            {
                "step_num": 6,
                "step_name": "the HTTP response should have a content length of 16",
                "glue_code": "this.assert.equal(this.response.httpResponse.body.length, parseInt(contentLength));\n    next();",
                "language": "js"
            },
            {
                "step_num": 7,
                "step_name": "the MD5 checksum of the response data should equal the generated checksum",
                "glue_code": "var receivedContentMD5 = this.AWS.util.crypto.md5(this.data.Body.toString(), 'base64');\n    this.assert.equal(receivedContentMD5, this.sentContentMD5);\n    next();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 147,
        "test_case": "Putting to a pre-signed URL",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I get a pre-signed URL to PUT the key \"presigned\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I access the URL via HTTP PUT with data \"PRESIGNED BODY CONTENTS\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I get a pre-signed URL to GET the key \"presigned\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "I access the URL via HTTP GET",
                "glue_code": "var world = this;\n    this.data = '';\n    require('https').get(this.signedUrl, function (res) {\n      res.on('data', function (chunk) {\n        world.data += chunk.toString();",
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "the HTTP response should equal \"PRESIGNED BODY CONTENTS\"",
                "glue_code": "this.assert.equal(this.data, data);\n    callback();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 148,
        "test_case": "Pre-signed URLs with checksum",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I get a pre-signed URL to PUT the key \"hello\" with data \"CHECKSUMMED\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I access the URL via HTTP PUT with data \"NOT CHECKSUMMED\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the HTTP response should contain \"SignatureDoesNotMatch\"",
                "glue_code": "this.assert.match(this.data, data);\n    callback();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 149,
        "test_case": "POSTing an object with a presigned form",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a presigned form to POST the key \"presignedPost\" with the data \"PRESIGNED POST CONTENTS\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I POST the form",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the object \"presignedPost\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "I get the object \"presignedPost\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "the object \"presignedPost\" should contain \"PRESIGNED POST CONTENTS\"",
                "glue_code": "this.assert.equal(this.data.Body.toString().replace('\\n', ''), contents);\n    next();",
                "language": "js"
            },
            {
                "step_num": 6,
                "step_name": "the HTTP response should have a content length of 23",
                "glue_code": "this.assert.equal(this.response.httpResponse.body.length, parseInt(contentLength));\n    next();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 150,
        "test_case": "Streaming objects",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I put \"STREAMING CONTENT\" to the key \"streaming_object\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the object \"streaming_object\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I stream key \"streaming_object\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the streamed data should contain \"STREAMING CONTENT\"",
                "glue_code": "this.assert.equal(this.result.replace('\\n', ''), data);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "I stream2 key \"streaming_object\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 6,
                "step_name": "the streamed data should contain \"STREAMING CONTENT\"",
                "glue_code": "this.assert.equal(this.result.replace('\\n', ''), data);\n    callback();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 151,
        "test_case": "Streaming empty objects",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I put an empty buffer to the key \"empty_streaming_object\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the object \"empty_streaming_object\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I stream key \"empty_streaming_object\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the streamed data content length should equal 0",
                "glue_code": "this.assert.equal(this.result.length, length);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "I stream2 key \"empty_streaming_object\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 6,
                "step_name": "the streamed data content length should equal 0",
                "glue_code": "this.assert.equal(this.result.length, length);\n    callback();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 152,
        "test_case": "Streaming small objects",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I put a small buffer to the key \"small_streaming_object\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the object \"small_streaming_object\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I stream key \"small_streaming_object\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the streamed data content length should equal 1048576",
                "glue_code": "this.assert.equal(this.result.length, length);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "I stream2 key \"small_streaming_object\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 6,
                "step_name": "the streamed data content length should equal 1048576",
                "glue_code": "this.assert.equal(this.result.length, length);\n    callback();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 153,
        "test_case": "Streaming large objects",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I put a large buffer to the key \"large_streaming_object\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the object \"large_streaming_object\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I stream key \"large_streaming_object\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the streamed data content length should equal 20971520",
                "glue_code": "this.assert.equal(this.result.length, length);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "I stream2 key \"large_streaming_object\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 6,
                "step_name": "the streamed data content length should equal 20971520",
                "glue_code": "this.assert.equal(this.result.length, length);\n    callback();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 154,
        "test_case": "Progress events",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I put a 2MB buffer to the key \"progress_object\" with progress events",
                "glue_code": "var self = this;\n    var body = self.createBuffer(size);\n    this.progress = [];\n    var req = this.s3.putObject({Bucket: this.sharedBucket, Key: key, Body: body",
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "more than 0 \"httpUploadProgress\" event should fire",
                "glue_code": "this.assert.compare(this.progress.length, '>', numEvents);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the \"total\" value of the progress event should equal 2MB",
                "glue_code": "this.assert.equal(this.progress[0][prop], mb * 1024 * 1024);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the \"loaded\" value of the first progress event should be greater than 10 bytes",
                "glue_code": "this.assert.compare(this.progress[0][prop], '>', bytes);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "I read the key \"progress_object\" with progress events",
                "glue_code": "var self = this;\n    this.progress = [];\n    var req = this.s3.getObject({Bucket: this.sharedBucket, Key: key",
                "language": "js"
            },
            {
                "step_num": 6,
                "step_name": "more than 0 \"httpDownloadProgress\" event should fire",
                "glue_code": "this.assert.compare(this.progress.length, '>', numEvents);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 7,
                "step_name": "the \"total\" value of the progress event should equal 2MB",
                "glue_code": "this.assert.equal(this.progress[0][prop], mb * 1024 * 1024);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 8,
                "step_name": "the \"loaded\" value of the first progress event should be greater than 10 bytes",
                "glue_code": "this.assert.compare(this.progress[0][prop], '>', bytes);\n    callback();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 155,
        "test_case": "Proxy support",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I put \"world\" to the key \"proxy_object\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the object \"proxy_object\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I get the object \"proxy_object\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the object \"proxy_object\" should contain \"world\"",
                "glue_code": "this.assert.equal(this.data.Body.toString().replace('\\n', ''), contents);\n    next();",
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "I delete the object \"proxy_object\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 6,
                "step_name": "the object \"proxy_object\" should not exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 7,
                "step_name": "I teardown the local proxy server",
                "glue_code": "this.service = this.s3 = new this.AWS.S3();\n    this.proxyServer.close(callback);",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 156,
        "test_case": "Paginating responses",
        "steps": [
            {
                "step_num": 1,
                "step_name": "an empty bucket",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I put \"data\" to the key \"obj0\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I put \"data\" to the key \"obj1\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "I put \"data\" to the key \"obj2\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "I put \"data\" to the key \"obj3\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 6,
                "step_name": "I put \"data\" to the key \"obj4\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 7,
                "step_name": "I put \"data\" to the key \"obj5\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 8,
                "step_name": "I put \"data\" to the key \"obj6\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 9,
                "step_name": "I put \"data\" to the key \"obj7\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 10,
                "step_name": "I put \"data\" to the key \"obj8\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 11,
                "step_name": "I put \"data\" to the key \"obj9\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 12,
                "step_name": "the object \"obj9\" should exist",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 13,
                "step_name": "I setup the listObjects request for the bucket",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 14,
                "step_name": "I paginate the \"listObjects\" operation with limit 3",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 15,
                "step_name": "I should get 4 pages",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 157,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I put \"data\" to the invalid key \"\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"UriParameterError\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 158,
        "test_case": "Sigv4 Bucket with trailing slash",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I use signatureVersion \"v4\"",
                "glue_code": "this.s3Slashes = new this.AWS.S3({signatureVersion: signatureVersion",
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I put \"\" to the key \"\" with bucket suffix \"/\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the object \"/\" should exist",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 159,
        "test_case": "Sigv4 Bucket with dobule trailing slashes",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I use signatureVersion \"v4\"",
                "glue_code": "this.s3Slashes = new this.AWS.S3({signatureVersion: signatureVersion",
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I put \"\" to the key \"\" with bucket suffix \"//\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the object \"//\" should exist",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 160,
        "test_case": "Sigv4 Bucket with slashes without trailing slash",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I use signatureVersion \"v4\"",
                "glue_code": "this.s3Slashes = new this.AWS.S3({signatureVersion: signatureVersion",
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I put \"\" to the key \"\" with bucket suffix \"/a/b\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the object \"a/b/\" should exist",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 161,
        "test_case": "Sigv4 Bucket with slashes with Key",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I use signatureVersion \"v4\"",
                "glue_code": "this.s3Slashes = new this.AWS.S3({signatureVersion: signatureVersion",
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I put \"\" to the key \"foo\" with bucket suffix \"/a/b\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the object \"a/b/foo\" should exist",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 162,
        "test_case": "Sigv4 Bucket with trailing slashes with Key",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I use signatureVersion \"v4\"",
                "glue_code": "this.s3Slashes = new this.AWS.S3({signatureVersion: signatureVersion",
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I put \"\" to the key \"foo\" with bucket suffix \"/a/b/\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the object \"a/b//foo\" should exist",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 163,
        "test_case": "Sigv2 Bucket with trailing slash",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I use signatureVersion \"v2\"",
                "glue_code": "this.s3Slashes = new this.AWS.S3({signatureVersion: signatureVersion",
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I put \"\" to the key \"\" with bucket suffix \"/\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the object \"/\" should exist",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 164,
        "test_case": "Sigv2 Bucket with double trailing slashes",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I use signatureVersion \"v2\"",
                "glue_code": "this.s3Slashes = new this.AWS.S3({signatureVersion: signatureVersion",
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I put \"\" to the key \"\" with bucket suffix \"//\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the object \"//\" should exist",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 165,
        "test_case": "Sigv2 Bucket with slashes without trailing slash",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I use signatureVersion \"v2\"",
                "glue_code": "this.s3Slashes = new this.AWS.S3({signatureVersion: signatureVersion",
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I put \"\" to the key \"\" with bucket suffix \"/a/b\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the object \"a/b/\" should exist",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 166,
        "test_case": "Sigv2 Bucket with slashes with Key",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I use signatureVersion \"v2\"",
                "glue_code": "this.s3Slashes = new this.AWS.S3({signatureVersion: signatureVersion",
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I put \"\" to the key \"foo\" with bucket suffix \"/a/b\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the object \"a/b/foo\" should exist",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "objects.feature",
        "test_num": 167,
        "test_case": "Sigv2 Bucket with trailing slashes with Key",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I use signatureVersion \"v2\"",
                "glue_code": "this.s3Slashes = new this.AWS.S3({signatureVersion: signatureVersion",
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I put \"\" to the key \"foo\" with bucket suffix \"/a/b/\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the object \"a/b//foo\" should exist",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "ses.feature",
        "test_num": 168,
        "test_case": "Check quota",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I check quota",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the result should include number \"SentLast24Hours\"",
                "glue_code": "if (this.data[attr] === undefined) next.fail(\"Missing \" + attr);\n    if (typeof this.data[attr] !== type) next.fail(\"Incorrect type \" + attr);\n    next();",
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the result should include number \"MaxSendRate\"",
                "glue_code": "if (this.data[attr] === undefined) next.fail(\"Missing \" + attr);\n    if (typeof this.data[attr] !== type) next.fail(\"Incorrect type \" + attr);\n    next();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "ses.feature",
        "test_num": 169,
        "test_case": "Verify email",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I ask to verify the email address \"foo@example.com\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the status code should be 200",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "ses.feature",
        "test_num": 170,
        "test_case": "Rescue SES InvalidParameterValue",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I ask to verify the email address \"abc123\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I should get the error",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "sns.feature",
        "test_num": 171,
        "test_case": "Topics",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create an SNS topic with name \"aws-js-sdk-integration-topic\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I list the SNS topics",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the list should contain the topic ARN",
                "glue_code": "var arn = this.topicArn;\n    this.assert.contains(this.data.Topics, function(topic) {\n      return topic.TopicArn === arn;",
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "I delete the SNS topic",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "sns.feature",
        "test_num": 172,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I get SNS topic attributes with an invalid ARN",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"InvalidParameter\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "messages.feature",
        "test_num": 173,
        "test_case": "Send an SQS message",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a queue with the prefix name \"aws-js-sdk\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I send the message \"HELLO\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the result should include a message ID",
                "glue_code": "this.assert.compare(this.data.MessageId.length, '>', 0);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the result should have an MD5 digest of \"eb61eead90e3b899c6bcbe27ac581660\"",
                "glue_code": "this.assert.equal(this.data.MD5OfMessageBody, digest);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "I should eventually be able to receive \"HELLO\" from the queue",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "messages.feature",
        "test_num": 174,
        "test_case": "Binary payloads",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a queue with the prefix name \"aws-js-sdk\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I send the message \"HELLO\" with a binary attribute",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the result should include a message ID",
                "glue_code": "this.assert.compare(this.data.MessageId.length, '>', 0);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 4,
                "step_name": "the result should have an MD5 digest of \"eb61eead90e3b899c6bcbe27ac581660\"",
                "glue_code": "this.assert.equal(this.data.MD5OfMessageBody, digest);\n    callback();",
                "language": "js"
            },
            {
                "step_num": 5,
                "step_name": "I should eventually be able to receive \"HELLO\" from the queue with a binary attribute",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "queues.feature",
        "test_num": 175,
        "test_case": "Creating and deleting queues",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a queue with the prefix name \"aws-js-sdk\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I create a queue with the prefix name \"aws-js-sdk\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "list queues should eventually return the queue urls",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "queues.feature",
        "test_num": 176,
        "test_case": "Making a queue request across regions",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I have a \"SQS\" service in the \"us-west-1\" region",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "I create a queue with the prefix name \"aws-js-sdk\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "I have a \"SQS\" service in the \"us-east-1\" region",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "ssm.feature",
        "test_num": 177,
        "test_case": "Listing Documents",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"listDocuments\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"DocumentIdentifiers\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "ssm.feature",
        "test_num": 178,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"describeDocument\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"InvalidDocument\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "storagegateway.feature",
        "test_num": 179,
        "test_case": "Listing Gateways",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"listGateways\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"Gateways\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "storagegateway.feature",
        "test_num": 180,
        "test_case": "Activating a Gateway",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I try to activate a Storage Gateway",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"InvalidGatewayRequestException\"",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the status code should be 400",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "sts.feature",
        "test_num": 181,
        "test_case": "Get a session token",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I get an STS session token with a duration of 900 seconds",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the result should contain an access key ID and secret access key",
                "glue_code": "this.assert.compare(this.data.Credentials.AccessKeyId.length, '>', 0);\n    this.assert.compare(this.data.Credentials.SecretAccessKey.length, '>', 0);\n    callback();",
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "sts.feature",
        "test_num": 182,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I get an STS session token with a duration of 60 seconds",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ValidationError\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "support.feature",
        "test_num": 183,
        "test_case": "Describe Services",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I describe Support services",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"services\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "support.feature",
        "test_num": 184,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I create a case with an invalid category",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ValidationException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "swf.feature",
        "test_num": 185,
        "test_case": "Listing domains",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"listDomains\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"domainInfos\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "swf.feature",
        "test_num": 186,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"describeDomain\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"UnknownResourceFault\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "waf.feature",
        "test_num": 187,
        "test_case": "Making a request",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"listRules\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"Rules\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "workspaces.feature",
        "test_num": 188,
        "test_case": "Describing workspaces",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"describeWorkspaces\" operation",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the request should be successful",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 3,
                "step_name": "the value at \"Workspaces\" should be a list",
                "glue_code": null,
                "language": "js"
            }
        ]
    },
    {
        "feature_file": "workspaces.feature",
        "test_num": 189,
        "test_case": "Error handling",
        "steps": [
            {
                "step_num": 1,
                "step_name": "I run the \"rebuildWorkspaces\" operation with params",
                "glue_code": null,
                "language": "js"
            },
            {
                "step_num": 2,
                "step_name": "the error code should be \"ValidationException\"",
                "glue_code": null,
                "language": "js"
            }
        ]
    }
]